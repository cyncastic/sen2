//---------------------------------------------------------------------------------------------
//  FRAMESCSS
  $font-size: 16px;     // Your base font-size in pixels
  $em: $font-size / 1em;  // Shorthand for outputting ems

  $column: 48px;  // The column-width of your grid in pixels
  $gutter: 24px;  // The gutter-width of your grid in pixels

  // Column-widths in variables, in ems  
   $cols1: ( 1 * ($column + $gutter) - $gutter) / $em; //   48
   $cols2: ( 2 * ($column + $gutter) - $gutter) / $em; //  120
   $cols3: ( 3 * ($column + $gutter) - $gutter) / $em; //  192
   $cols4: ( 4 * ($column + $gutter) - $gutter) / $em; //  264
   $cols5: ( 5 * ($column + $gutter) - $gutter) / $em; //  336
   $cols6: ( 6 * ($column + $gutter) - $gutter) / $em; //  408
   $cols7: ( 7 * ($column + $gutter) - $gutter) / $em; //  480
   $cols8: ( 8 * ($column + $gutter) - $gutter) / $em; //  552
   $cols9: ( 9 * ($column + $gutter) - $gutter) / $em; //  624
  $cols10: (10 * ($column + $gutter) - $gutter) / $em; //  696
  $cols11: (11 * ($column + $gutter) - $gutter) / $em; //  768
  $cols12: (12 * ($column + $gutter) - $gutter) / $em; //  840
  $cols13: (13 * ($column + $gutter) - $gutter) / $em; //  912
  $cols14: (14 * ($column + $gutter) - $gutter) / $em; //  984
  $cols15: (15 * ($column + $gutter) - $gutter) / $em; // 1056
  $cols16: (16 * ($column + $gutter) - $gutter) / $em; // 1128
  $cols17: (17 * ($column + $gutter) - $gutter) / $em; // 1200
  $cols18: (18 * ($column + $gutter) - $gutter) / $em; // 1272
  $cols19: (19 * ($column + $gutter) - $gutter) / $em; // 1344
  $cols20: (20 * ($column + $gutter) - $gutter) / $em; // 1416
  $cols21: (21 * ($column + $gutter) - $gutter) / $em; // 1488
  $cols22: (22 * ($column + $gutter) - $gutter) / $em; // 1560
  $cols23: (23 * ($column + $gutter) - $gutter) / $em; // 1632
  $cols24: (24 * ($column + $gutter) - $gutter) / $em; // 1704
  $cols25: (25 * ($column + $gutter) - $gutter) / $em; // 1776
  $cols26: (26 * ($column + $gutter) - $gutter) / $em; // 1848
  
  // Column-widths in a function, in ems
  @mixin width ($cols:1) {
    width: ($cols * ($column + $gutter) - $gutter) / $em;
  }

  // Colors
  $black: #110c0f;
  $white: #f7f7f6;
  $grey:  #555555;
  $red:   #DA291C;

  // Grid Background;
  $grid-bg: url('https://s3-us-west-2.amazonaws.com/popupxnyc/static/grid-bg.gif');

//---------------------------------------------------------------------------------------------
//  TYPOGRAPHY
  body{
    font-size: 16px / $em;
    line-height: 24px / $em;
    font-family: 'Noto Sans', Calibri, Candara, Segoe, "Segoe UI", Optima, Arial, sans-serif;
    font-weight: 400;
    color: $black;
    min-height: 100%;
    a { 
      text-decoration: none;
      color: $grey; 
    }
  }
  header.main{
    h1, nav{
      text-transform: uppercase;
    }
  }

//---------------------------------------------------------------------------------------------
//  STRUCTURE
  *, *:before, *:after { @include box-sizing(border-box); }
  img{ vertical-align: middle; }

  @mixin image-style{
    border-top: 1px $white solid;
    box-shadow: 0 0 .25em rgba(0,0,0,.5);
  }

  body{ background-color: $white;}
  .container{ margin: 0 auto; }
  
  header.main{
    position: relative;
    margin: ($gutter / $em) 0 0;
    img{ 
      height: auto;
      box-shadow: 0 0 .25em rgba(0,0,0,.5);
      border-bottom: 1px $white solid;
      z-index: 9999;
    }
    .pinned{ background: rgba(247,247,246,.97); box-shadow: 0 0 .5em $white; z-index: 999}
  }

  nav#main-nav{
    position: absolute;
    right: 0;
    bottom: 0;
    ul li{
      display: inline;
      &::after{
        content: '\00B7';
        margin: 0 .25em 0 .5em;
        color: $grey;
        display: inline-block;
        @include transition(color 2s ease-out);
      }
      &:last-child{
        &::after{
          content: none
        }
      }
      &:hover{
        &::after{
          color: $red;
          @include transition(color 18s ease-out);
          @include animation(spaceboots .125s infinite linear);
        }
      }

      a{ 
        color: $grey;
        @include transition(color .5s ease-out);
        &:hover{
          color: $black;
        }
      }
    }
  }
  .images{
    margin-top: 3em;
    @include clearfix;
    li{
      position: relative;
      margin: 0 ($gutter / $em) ($gutter / $em) 0; 
      display: block;
      float: left;
      overflow: hidden;
      @include image-style;      
      a{
        &::after{
          content: attr(data-title);
          display: block;
          @include position(absolute);
          top: 0;
          width: 100%; height: 100%;
          background: $white;
          text-align: center;
          
          @include transition (opacity 0.5s ease-in);
          opacity: 0;
        }
        &:hover::after{
          opacity: .9;
          @include transition (opacity 0.2s ease-out);
        }
      }
    }
    &::after{
      font-size: 2em;
      line-height: 3em;
      text-align: center;
      display: block;
      content: '\00B7';
      @include animation(spaceboots .125s infinite linear);
    }
  }

  .posts{
    article{
      &::after{
        font-size: 2em;
        line-height: 3em;
        text-align: center;
        display: block;
        content: '\00B7';
        @include animation(spaceboots .125s infinite linear);
      }
    }
    .blog-image{
      background: $black;
      display: block;
      text-align: center;
      @include image-style;
      overflow: hidden;
      img{
        max-width: 100%;
      }
    }
    header{
      position: relative;
      h1{
        font-size: 2em;
        line-height: 1.5em;
      }
      .posted{
        position: absolute;
        right: 0;
        bottom: .4em;
        color: $grey;
      }
    }
    .post-text{ text-align: center; }
    footer{ text-align: right; }
  }

//---------------------------------------------------------------------------------------------
//  MEDIA QUERIES

    @media screen and (max-width: $cols8){
      body{ font-size: 14px / $em; }
    }
  // 8 Cols
    @media screen and (min-width: $cols1) {
      .container, .header-img, .blog-image{ @include width(8); }
      .images{ li, img{ @include size($cols4); } a::after{ line-height: $cols4; } }
      .images li:nth-child(2n+2){ margin-right: 0; }
      header.main{  h1, nav{ font-size: 1em; line-height: 1.5em; }}
    }

  // 12 Cols
    @media screen and (min-width: $cols12){
      .container, .header-img, .blog-image{ @include width(12); }
      .images li:nth-child(2n+2){ margin-right: $gutter / $em; }
      .images li:nth-child(3n+3){ margin-right: 0; }
      header.main{  h1, nav{ font-size: 1.25em; line-height: 1.75em; }}
    }

  // 15 Cols
    @media screen and (min-width: $cols15){
      .container, .header-img, .blog-image{ @include width(15); }
      .images{ li, img{ @include size($cols5); } a::after{ line-height: $cols5; }}
      header.main{  h1, nav{ font-size: 1.5em; line-height: 2em; }}
    }

  // 18 Cols
    @media screen and (min-width: $cols18){
      .container, .header-img, .blog-image{ @include width(18); }
      .images{ li, img{ @include size($cols6); } a::after{ line-height: $cols6; }}
    }

  // 22 Cols
    @media screen and (min-width: $cols24){
      .container, .header-img, .blog-image{ @include width(24); }
      .images li:nth-child(3n+3){ margin-right: $gutter / $em; }
      .images li:nth-child(4n+4){ margin-right: 0; }
    }
  // Larger
    @media screen and (min-width: $cols26){
      body{ font-size: 18px / $em; }
    }



//----------------------------------
// ANIMATIONS

  @include keyframes(spaceboots) {
      0% { @include transform(translate( 2px,  1px) rotate( 0deg)); }
     10% { @include transform(translate(-1px, -2px) rotate(-1deg)); }
     20% { @include transform(translate(-3px,  0px) rotate( 1deg)); }
     30% { @include transform(translate( 0px,  2px) rotate( 0deg)); }
     40% { @include transform(translate( 1px, -1px) rotate( 1deg)); }
     50% { @include transform(translate(-1px,  2px) rotate(-1deg)); }
     60% { @include transform(translate(-3px,  1px) rotate( 0deg)); }
     70% { @include transform(translate( 2px,  1px) rotate(-1deg)); }
     80% { @include transform(translate(-1px, -1px) rotate( 1deg)); }
     90% { @include transform(translate( 2px,  2px) rotate( 0deg)); }
    100% { @include transform(translate( 1px, -2px) rotate(-1deg)); }
  }







